set nocompatible

"Disable some plugins temporarily
let g:pathogen_disabled = []

call add(g:pathogen_disabled, 'syntastic') " Getting annoying
call add(g:pathogen_disabled, 'delimitMate') "Overzealous w/ errors

call pathogen#infect()    " Start pathogen plugin
call pathogen#helptags()  " command-t needs it


syntax enable             " enables syntax highlighting 
filetype plugin indent on " Recognize filetype
set t_Co=256              " for colorschemes:
set background=dark
colorscheme zenburn

" Interface
set number                   " line numbers
set nowrap                   " turn off line wrapping
set ruler                    " linenum, colnum displayes
set cursorline               " shows current line highlighted
set showcmd                  " Show incompletecommand
set showmode                 " Show mode i'm in
set showmatch                " Show matching bracets when text indicator is over them

" Buffer management
set hidden                   " Handle multiple buffers better.
set splitright               " vs splits new window to east

" Bash-like completion
set wildmenu                                    " status line for vim
set wildmode=list:longest                       " Complete files like a shell.
set wildignore+=*.a,*.o,*.class,*.pyc           "Ignore compiled files
set wildignore+=*.jar,*.zip                     "Ignore compressed files
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png   "Ignore image files
set wildignore+=.DS_Store,.git,.hg,.svn         "Ignore hidden files and folders
set wildignore+=*~,*.swp,*.tmp,*.bak            "Ignore backup files

" Movement
set backspace=indent,eol,start  " Intuitive backspacing.
set scrolloff=10                " Show 10 lines of context around the cursor.

" Searching
set ignorecase   " Ignore case when searching
set smartcase    " Igore case when lowercase is given
set hlsearch     " Highlight search things
set incsearch    " Make search act like search in modern browsers

" Indenting Style
set smartindent   " smart indent when inserting new line
set autoindent    " copy indent from above line

" Tab Style
set smarttab        " activate smart tabs
set expandtab       " insert space characters whenever the tab key is pressed
set tabstop=4       " control the number of space characters that will be inserted when the tab key is pressed
set shiftwidth=4    " change the number of space characters inserted for indentation

" Re map leader
let mapleader=","
let g:mapleader=','
let g:maplocalleader=','

""" Personal bindings
" Remapping Symbols
nnoremap ; :
vnoremap < <gv
vnoremap > >gv 

" Remapping ShiftKeys
noremap U :redo<CR>
noremap Q :qa!<CR>
noremap W :wa!<CR>
noremap H :nohl<CR>
noremap Y y$

""" Mapping CtrlKeys
nmap <C-p> :bp<CR>
nmap <C-n> :bn<CR>
nmap <C-d> :bw<CR>

nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

map <C-a> ggVG

imap <C-e> <C-y>,
imap <C-z> <C-y>N
imap <C-x> <C-y>n

""" Mapping Leader Keys
nmap <Leader>c :TComment<CR>
vmap <Leader>c :TComment<CR>

""" Mapping FKeys
nmap <F2> :w<CR>
imap <F2> <Esc>:w<CR>
vmap <F2> <Esc>:w<CR>
nmap <F5>  :NERDTreeToggle<CR>
nmap <F6>  :TagbarToggle<CR>

""" Command mode mappings
cmap w!! w !sudo tee % >/dev/null

" Handle other filetypes
autocmd BufNewFile,BufRead *.less set ft=css
autocmd BufNewFile,BufRead *.json set ft=javascript
